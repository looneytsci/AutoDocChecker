from selenium.webdriver.safari.webdriver import WebDriver
from selenium.webdriver.remote.webelement import WebElement
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class website_data_parser:
    def __init__(self, driver: WebDriver, url: str, waiter_timeout: int):
        self.driver = driver
        self.url = url
        self.web_driver_wait = WebDriverWait(driver, waiter_timeout)

    def find_simple_element_with_xpath(self, name, xpath) -> WebElement:
        try:
            web_element = self.driver.find_element(By.XPATH, xpath)

            print(f'üü¢ {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å id {web_element.id}')

            return web_element
        except Exception as error:
            print(f'‚ùå {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n‚ùå XPATH: {xpath}\n‚ùå Selenium: {error}')

    def wait_and_find_element(self, name, xpath) -> WebElement:
        try:
            web_element = self.web_driver_wait.until(
                EC.presence_of_element_located((By.XPATH, xpath))
            )
            print(f'üü¢ {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å id {web_element.id}')
            return web_element
        except Exception as error:
            print(f'‚ùå {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n‚ùå XPATH: {xpath}\n‚ùå Selenium: {error}')
    
    def wait_visibility_and_find_element(self, name, xpath) -> WebElement:
        try:
            web_element = self.web_driver_wait.until(
                EC.visibility_of_element_located((By.XPATH, xpath))
            )
            print(f'üü¢ {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å id {web_element.id}')
            return web_element
        except Exception as error:
            print(f'‚ùå {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.\n‚ùå XPATH: {xpath}\n‚ùå Selenium: {error}')

    def wait_until_clickable_and_click_element(self, name, css_selector):
        try:
            clickable_element = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, css_selector))
            )
            self.driver.execute_script("arguments[0].click();", clickable_element)
            print(f'üü¢ {name}: –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å id {clickable_element.id} –∏ —É—Å–ø–µ—à–Ω–æ –∫–ª–∏–∫–Ω—É—Ç')
        except Exception as error:
            print(f'‚ùå {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω.\n‚ùå Selenium: {error}')

    def wait_until_clickable_and_click_element_xpath(self, name, xpath):
        try:
            clickable_element = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, xpath))
            )
            self.driver.execute_script("arguments[0].click();", clickable_element)
            print(f'üü¢ {name}: –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å id {clickable_element.id} –∏ —É—Å–ø–µ—à–Ω–æ –∫–ª–∏–∫–Ω—É—Ç')
        except Exception as error:
            print(f'‚ùå {name}: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω.\n‚ùå Selenium: {error}')
    
    def find_and_switch_to_new_frame(self, xpath):
        try:
            new_iframe = self.web_driver_wait.until(
                EC.presence_of_element_located((By.XPATH, xpath))
            )
            self.driver.switch_to.frame(new_iframe)

            print('üü¢ iframe: –£—Å–ø–µ—à–Ω–æ –Ω–∞—à–ª–∏ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –Ω–æ–≤—ã–π —Ñ—Ä–µ–π–º.')
        except Exception as error:
            print(f'‚ùå iframe: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –Ω–æ–≤—ã–π —Ñ—Ä–µ–π–º.\n‚ùå Selenium: {error}')
    
    def execute_script(self, script, element, name):
        try:
            self.driver.execute_script(script, element)
            print(f'üü¢ {name}: –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Å–∫—Ä–∏–ø—Ç')
        except Exception as error:
            print(f'‚ùå {name}: –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.\nSelenium: {error}')

    def check_element_presence(self, name, xpath) -> WebElement:
        try:
            elem = self.web_driver_wait.until(
                EC.presence_of_element_located((By.XPATH, xpath))
            )
            print(f'‚ÑπÔ∏è  {name}: Web —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω–µ')

            return elem
        except Exception as e:
            print(f'‚ÑπÔ∏è  {name}: Web —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω–µ')
            return None

    def default_context(self):
        self.driver.switch_to.default_content()

    def make_screenshot(self, path):
        self.driver.save_screenshot(path)
        print(f'üü¢ –°–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ –ø—É—Ç–∏ {path}')

    def open_url(self, url):
        self.driver.get(url)

    def finish_session(self):
        self.driver.quit()